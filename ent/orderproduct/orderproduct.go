// Code generated by entc, DO NOT EDIT.

package orderproduct

import (
	"time"
)

const (
	// Label holds the string label denoting the orderproduct type in the database.
	Label = "order_product"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldOrderID holds the string denoting the order_id field in the database.
	FieldOrderID = "order_id"
	// FieldProductID holds the string denoting the product_id field in the database.
	FieldProductID = "product_id"
	// FieldQty holds the string denoting the qty field in the database.
	FieldQty = "qty"
	// FieldAmount holds the string denoting the amount field in the database.
	FieldAmount = "amount"
	// EdgeOrderProductOrder holds the string denoting the order_product_order edge name in mutations.
	EdgeOrderProductOrder = "order_product_order"
	// EdgeOrderProductProduct holds the string denoting the order_product_product edge name in mutations.
	EdgeOrderProductProduct = "order_product_product"
	// Table holds the table name of the orderproduct in the database.
	Table = "order_products"
	// OrderProductOrderTable is the table that holds the order_product_order relation/edge.
	OrderProductOrderTable = "order_products"
	// OrderProductOrderInverseTable is the table name for the Order entity.
	// It exists in this package in order to avoid circular dependency with the "order" package.
	OrderProductOrderInverseTable = "orders"
	// OrderProductOrderColumn is the table column denoting the order_product_order relation/edge.
	OrderProductOrderColumn = "order_id"
	// OrderProductProductTable is the table that holds the order_product_product relation/edge.
	OrderProductProductTable = "order_products"
	// OrderProductProductInverseTable is the table name for the Product entity.
	// It exists in this package in order to avoid circular dependency with the "product" package.
	OrderProductProductInverseTable = "products"
	// OrderProductProductColumn is the table column denoting the order_product_product relation/edge.
	OrderProductProductColumn = "product_id"
)

// Columns holds all SQL columns for orderproduct fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldOrderID,
	FieldProductID,
	FieldQty,
	FieldAmount,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
